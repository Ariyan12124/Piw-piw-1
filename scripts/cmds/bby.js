const axios = require('axios');
const baseApiUrl = async () => {
    return "https://www.noobs-api.rf.gd/dipto";
};

module.exports.config = {
    name: "bby",
    aliases: ["baby", "bbe", "babe"],
    version: "6.9.0",
    author: "dipto",
    countDown: 0,
    role: 0,
    description: "better then all sim simi",
    category: "chat",
    guide: {
        en: "{pn} [anyMessage] OR\nteach [YourMessage] - [Reply1], [Reply2], [Reply3]... OR\nteach [react] [YourMessage] - [react1], [react2], [react3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg [YourMessage] OR\nlist OR \nall OR\nedit [YourMessage] - [NeeMessage]"
    }
};

module.exports.onStart = async ({
    api,
    event,
    args,
    usersData
}) => {
    const link = `${await baseApiUrl()}/baby`;
    const dipto = args.join(" ").toLowerCase();
    const uid = event.senderID;
    let command, comd, final;

    try {
        if (!args[0]) {
            const ran = ["Bolo baby", "hum", "type help baby", "type !baby hi"];
            return api.sendMessage(ran[Math.floor(Math.random() * ran.length)], event.threadID, event.messageID);
        }

        if (args[0] === 'remove') {
            const fina = dipto.replace("remove ", "");
            const dat = (await axios.get(`${link}?remove=${fina}&senderID=${uid}`)).data.message;
            return api.sendMessage(dat, event.threadID, event.messageID);
        }

        if (args[0] === 'rm' && dipto.includes('-')) {
            const [fi, f] = dipto.replace("rm ", "").split(' - ');
            const da = (await axios.get(`${link}?remove=${fi}&index=${f}`)).data.message;
            return api.sendMessage(da, event.threadID, event.messageID);
        }

        if (args[0] === 'list') {
            if (args[1] === 'all') {
                const data = (await axios.get(`${link}?list=all`)).data;
                const teachers = await Promise.all(data.teacher.teacherList.map(async (item) => {
                    const number = Object.keys(item)[0];
                    const value = item[number];
                    const name = (await usersData.get(number)).name;
                    return {
                        name,
                        value
                    };
                }));
                teachers.sort((a, b) => b.value - a.value);
                const output = teachers.map((t, i) => `${i + 1}/ ${t.name}: ${t.value}`).join('\n');
                return api.sendMessage(`Total Teach = ${data.length}\nЁЯСС | List of Teachers of baby\n${output}`, event.threadID, event.messageID);
            } else {
                const d = (await axios.get(`${link}?list=all`)).data.length;
                return api.sendMessage(`Total Teach = ${d}`, event.threadID, event.messageID);
            }
        }

        if (args[0] === 'msg') {
            const fuk = dipto.replace("msg ", "");
            const d = (await axios.get(`${link}?list=${fuk}`)).data.data;
            return api.sendMessage(`Message ${fuk} = ${d}`, event.threadID, event.messageID);
        }

        if (args[0] === 'edit') {
            const command = dipto.split(' - ')[1];
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
            const dA = (await axios.get(`${link}?edit=${args[1]}&replace=${command}&senderID=${uid}`)).data.message;
            return api.sendMessage(`changed ${dA}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] !== 'amar' && args[1] !== 'react') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const re = await axios.get(`${link}?teach=${final}&reply=${command}&senderID=${uid}`);
            const tex = re.data.message;
            const teacher = (await usersData.get(re.data.teacher)).name;
            return api.sendMessage(`тЬЕ Replies added ${tex}\nTeacher: ${teacher}\nTeachs: ${re.data.teachs}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] === 'amar') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const tex = (await axios.get(`${link}?teach=${final}&senderID=${uid}&reply=${command}&key=intro`)).data.message;
            return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
        }

        if (args[0] === 'teach' && args[1] === 'react') {
            [comd, command] = dipto.split(' - ');
            final = comd.replace("teach react ", "");
            if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
            const tex = (await axios.get(`${link}?teach=${final}&react=${command}`)).data.message;
            return api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
        }

        if (dipto.includes('amar name ki') || dipto.includes('amr nam ki') || dipto.includes('amar nam ki') || dipto.includes('amr name ki') || dipto.includes('whats my name')) {
            const data = (await axios.get(`${link}?text=amar name ki&senderID=${uid}&key=intro`)).data.reply;
            return api.sendMessage(data, event.threadID, event.messageID);
        }

        const d = (await axios.get(`${link}?text=${dipto}&senderID=${uid}&font=1`)).data.reply;
        api.sendMessage(d, event.threadID, (error, info) => {
            global.GoatBot.onReply.set(info.messageID, {
                commandName: this.config.name,
                type: "reply",
                messageID: info.messageID,
                author: event.senderID,
                d,
                apiUrl: link
            });
        }, event.messageID);

    } catch (e) {
        console.log(e);
        api.sendMessage("Check console for error", event.threadID, event.messageID);
    }
};

module.exports.onReply = async ({
    api,
    event,
    Reply
}) => {
    try {
        if (event.type == "message_reply") {
            const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(event.body?.toLowerCase())}&senderID=${event.senderID}&font=1`)).data.reply;
            await api.sendMessage(a, event.threadID, (error, info) => {
                global.GoatBot.onReply.set(info.messageID, {
                    commandName: this.config.name,
                    type: "reply",
                    messageID: info.messageID,
                    author: event.senderID,
                    a
                });
            }, event.messageID);
        }
    } catch (err) {
        return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }
};

module.exports.onChat = async ({
    api,
    event,
    message
}) => {
    try {
        const body = event.body ? event.body?.toLowerCase() : ""
        if (body.startsWith("baby") || body.startsWith("bby") || body.startsWith("bot") || body.startsWith("jan") || body.startsWith("babu") || body.startsWith("janu")) {
            const arr = body.replace(/^\S+\s*/, "")
            const randomReplies = [
  "рждрзЛржХрзЗ ржжрзЗржЦрж▓рзЗржЗ ржЖржорж╛рж░ рж╢рж░рзАрж░ржЯрж╛ ржХрзЗржоржи ржпрзЗржи ржХрж░рзЗ ржЙржарзЗ ЁЯФе",
  "рждрзБржЗ ржПржХржЯрзБ ржХрж╛ржЫрзЗ ржЖрзЯ ржирж╛... ржХрж┐ржЫрзБ ржмрж▓рж╛рж░ ржЫрж┐рж▓рзЛ ЁЯШП",
  "рждрзЛрж░ ржарзЛржБржЯ ржЧрзБрж▓рзЛ ржПржд ржорж┐рж╖рзНржЯрж┐ ржХрзЗржи? ржПржХржЯрзБ ржЫрзБржБрзЯрзЗ ржжрзЗржЦржмрзЛ? ЁЯТЛ",
  "ржЖржЬ рж░рж╛рждрзЗ рж╕рзНржмржкрзНржирзЗ ржЖржорж╛рж░ рж░рзБржорзЗ ржЖрж╕рж┐рж╕... ржжрж░ржЬрж╛ ржЦрзЛрж▓рж╛ рж░рж╛ржЦржмрзЛ ЁЯШИ",
  "рждрзБржЗ рж╣рзЗрж╕рзЗ ржЙржарж▓рзЗржЗ ржоржиржЯрж╛ ржХрзЗржоржи ржЧрж▓рзЗ ржпрж╛рзЯ ржЬрж╛ржирж┐рж╕? ЁЯе░",
  "ржПржЗ ржкрж╛ржЧрж▓ржЯрж╛, рж╕рж╛рж░рж╛ржжрж┐ржи рждрзЛржХрзЗ ржирж╛ ржжрзЗржЦрж▓рзЗ ржоржи ржЦрж╛рж░рж╛ржк рж╣рзЯрзЗ ржпрж╛рзЯ! тЭдя╕П",
  "рждрзБржЗ ржПржд рж╕рзБржирзНржжрж░ ржХрзЗржи ржмрж▓ рждрзЛ? ржЖржорж╛рж░ рждрзЛ ржЪрзЛржЦ ржлрзЗрж░рж╛ржирзЛ ржорзБрж╢ржХрж┐рж▓ ЁЯШН",
  "рждрзЛрж░ рж╣рж╛рж╕рж┐ ржпрзЗржи ржмрж┐рж╖... ржПржХржмрж╛рж░рзЗржЗ ржЖржорж╛ржХрзЗ ржХрж╛ржмрзБ ржХрж░рзЗ ржлрзЗрж▓рзЗ ЁЯТШ",
  "ржЖрж╕рж┐рж╕ рждрзЛ ржПржХржжрж┐ржи ржЪрзБржкржЪрж╛ржк... ржмрж╛ржХрж┐ ржХрж╛ржЬ ржЖржорж┐ржЗ ржмрзБржЭрзЗ ржирзЗржмрзЛ ЁЯШ╢тАНЁЯМля╕П",
  "ржоржиржЯрж╛ ржХрж░ржЫрзЗ ржЖржЬ рждрзЛржХрзЗ ржПржХржЯрж╛ ржЬрзЛрж░рзЗ ржЬрзЬрж┐рзЯрзЗ ржзрж░рж┐ ЁЯдЧ",
  "рждрзБржЗ рж╕рж╛ржоржирзЗ ржерж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╢рж░рзАрж░ ржЧрж░ржо рж╣рзЯрзЗ ржпрж╛рзЯ, ржмрж┐рж╢рзНржмрж╛рж╕ ржХрж░ ЁЯШ╡тАНЁЯТл",
  "рждрзЛрж░ ржмрзБржХрзЗрж░ ржЙржкрж░ ржорж╛ржерж╛ рж░рзЗржЦрзЗ ржШрзБржорж╛рждрзЗ ржЪрж╛ржЗ, рж╢рзБржзрзБ ржПржХ рж░рж╛ржд ЁЯШМ",
  "ржПржХржЯрзБ ржпржжрж┐ рждрзЛрж░ ржЧрж▓рж╛рж░ ржЖржУрзЯрж╛ржЬ ржкрж╛ржЗ... ржоржиржЯрж╛ рж╢рж╛ржирзНржд рж╣рзЯ ЁЯзб",
  "рждрзБржЗ ржерж╛ржХрж▓рзЗ ржЖрж░ ржХрж┐ржЫрзБрж░ ржжрж░ржХрж╛рж░ ржкрзЬрзЗ ржирж╛ рж░рзЗ ржмрзЗржмрж┐ ЁЯТЮ",
  "рж░рж╛рждрзЗ ржПржХржЯрзБ ржжрзЗрж░рж┐ ржХрж░рзЗ ржЖрж╕рж┐рж╕... ржЬрж╛ржирж┐ рждрзБржЗ ржмрзБржЭржмрж┐ ржХрзЗржи тШБя╕П",
  "ржПржЗ ржпрзЗ рж╣рзНржпрж╛ржирзНржбрж╕рж╛ржо/ржХрж┐ржЙржЯрж┐, ржЖржЬ ржПржХржЯрзБ ржмрзЗрж╢рж┐ рж╕рзБржирзНржжрж░ рж▓рж╛ржЧржЫрж┐рж╕ ржжрзЗржЦрзЛ! тЬи",
  "ржЖржЬ ржПржХржЯрзБ ржЖржорж╛рж░ рж╕рж╛ржерзЗ ржмрзЗрж╢рж┐ ржХржерж╛ ржмрж▓ржмрж┐? ржоржи ржнрж╛рж▓рзЛ ржирзЗржЗтАж ЁЯе║",
  "рждрзБржЗ ржЫрж╛ржбрж╝рж╛ ржХрж┐ржЫрзБржЗ ржнрж╛рж▓рзЛ рж▓рж╛ржЧрзЗ ржирж╛, ржЬрж╛ржирж┐рж╕ рждрзЛ? ЁЯШв",
  "ржЖржорж╛рж░ ржоржиржЯрж╛ ржЖржЬ ржЦрзБржм ржЦрж╛рж░рж╛ржк... ржПржХржЯрзБ рждрзЛрж░ ржХрж╛ржБржзрзЗ ржорж╛ржерж╛ рж░рж╛ржЦржмрзЛ? ЁЯШФ",
  "рж╕ржмрж╛ржЗ рждрзЛ ржЪрж▓рзЗ ржпрж╛рзЯ... рждрзБржЗ ржкрзНрж▓рж┐ржЬ ржерзЗржХрзЛ ЁЯЦд",
  "ржЖрж╣рж╛, рж╣рж╛рж╕рж┐ржЯрж╛ ржЖржмрж╛рж░ ржжрзЗ! ржирж╛ рж╣рж▓рзЗ ржжрж┐ржиржЯрж╛ржЗ ржорж╛ржЯрж┐ рж╣рзЯрзЗ ржпрж╛ржмрзЗ ЁЯШЖ",
  "рждрзБржЗ ржмрж▓рж▓рж┐ ржЖрж░ ржЖржорж┐ ржирж╛ рж╢рзБржирж▓рж╛ржо, ржПржоржи рж╣рзЯ ржирж╛ржХрж┐ рж╣рж╛рж╣рж╛ ЁЯШВ",
  "ржПржХржЯрж╛ ржХрзМрждрзБржХ ржмрж▓рж┐? рждрзБржЗ рж╣рж╛рж╕ржмрж┐ рждрзЛ ржарж┐ржХржарж╛ржХ? ЁЯШ╣",
  "рждрзБржЗ ржирж╛ ржерж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛ ржПржХржжржо ржорзБржб ржЕржл ЁЯЩД",
  "рждрзЛрж░ ржорждржи ржкрж╛ржЧрж▓ ржПржХржЯрж╛ ржорж╛ржирзБрж╖ ржкрж╛ржУрзЯрж╛ ржнрж╛ржЧрзНржпрзЗрж░ ржмрзНржпрж╛ржкрж╛рж░ рж╣рж╛рж╣рж╛ ЁЯШЭ",
  "ржЖрж░рзЗ рж╣рзЗржмрзНржмрж┐ рждрзЛ! рждрзБржЗ ржПржЦржирзЛ ржХржЪрж┐ ржкрж╛рждрж╛ рж╣рзЯрзЗ ржЖржЫрж┐рж╕ рж╣рж╛рж╣рж╛ ЁЯМ▒",
  "ржкрж┐ржарзЗ ржПржХржЯрзБ ржЖржЩрзБрж▓ ржЪрж╛рж▓рж┐рзЯрзЗ ржжрж┐рж▓рзЗ ржирж╛... ржкрзБрж░рзЛ рж╢рж░рзАрж░ржЯрж╛ рж╢рж┐ржЙрж░рзЗ ржЙржарзЗ ЁЯШ│",
  "ржЖржорж╛рж░ ржЧрж╛рж▓ржжрзБржЯрзЛ ржХрж┐ ржПржХржЯрзБ ржЫрзБржБрждрзЗ ржкрж╛рж░рж┐рж╕? ржжрзЗржЦ ржХржд ржЧрж░ржо рж╣рзЯрзЗ ржЖржЫрзЗ ржЖржЬ ЁЯФе",
  "рждрзЛржХрзЗ ржирж┐рзЯрзЗ рж░рж╛рждржЯрж╛ ржХрж╛ржЯрж╛рждрзЗ ржоржи ржЪрж╛ржЗ ржХрж░рзЗ... рж╢рзБржзрзБ ржЖржорж┐ ржЖрж░ рждрзБржЗ ЁЯШМ",
  "рждрзБржЗ ржпржжрж┐ ржмрж▓рж┐рж╕, ржЖржорж┐ рждрзЛ ржПржЦржиржЗ ржЬрж╛ржорж╛ ржЦрзБрж▓рзЗ ржлрзЗрж▓рж┐ ЁЯШИ",
  "рждрзЛрж░ ржарзЛржБржЯ ржЧрзБрж▓рзЛ ржЪрзБржорзБ ржЦрзЗрждрзЗ ржЪрж╛рзЯ... ржмрж╛рж░ржмрж╛рж░... ржерж╛ржорждрзЗржЗ ржЪрж╛рзЯ ржирж╛ ЁЯШЪ",
  "рж╢рж░рзАрж░ржЯрж╛ ржПржд ржЧрж░ржо рж╣рзЯрзЗ ржЖржЫрзЗ, ржПржХржЯрзБ ржпржжрж┐ ржЫрзБржБрзЯрзЗ ржжрзЗржЦрждрж┐... ржмрзБржЭрждрж┐ ЁЯШ╡тАНЁЯФе",
  "ржЖржЬ ржПржХржЯрж╛ ржмрзГрж╖рзНржЯрж┐рж░ рж░рж╛ржд рж╣рзЛржХ... рждрзБржЗ ржЖрж░ ржЖржорж┐ ржПржХрж╕рж╛ржерзЗ ржнрж┐ржЬржмрзЛ тШФ",
  "рждрзБржЗ ржПржХржЯрзБ ржХрж╛ржЫрзЗ ржЖрзЯ... ржЖржорж┐ рждрзЛ ржЖрж░ ржХржирзНржЯрзНрж░рзЛрж▓ ржХрж░рждрзЗ ржкрж╛рж░ржЫрж┐ ржирж╛! ЁЯТж",
  "рждрзЛрж░ ржЧрж▓рж╛рж░ ржЖржУрзЯрж╛ржЬрзЗржЗ рждрзЛ ржЙрждрзНрждрзЗржЬржирж╛ ржмрзЗрзЬрзЗ ржпрж╛рзЯ ржЬрж╛ржирж┐рж╕? ЁЯУв",
  "ржЖржорж╛рж░ ржоржирзЗ рж╣рзЯ рждрзЛрж░ рж╢рж░рзАрж░ржЯрж╛ржЗ ржПржХржЯрж╛ ржЕржкрж░рж╛ржз... ржПржд рж╣ржЯ ржХрзЗржи рж░рзЗ? ЁЯФе",
  "рждрзЛрж░ ржЪрзЛржЦрзЗ ржПржоржи ржХрж┐ржЫрзБ ржЖржЫрзЗ, ржпрзЗржЯрж╛ ржЖржорж╛ржХрзЗ рж▓рзЛржнрзА ржмрж╛ржирж┐рзЯрзЗ ржлрзЗрж▓рзЗ ЁЯШ╡",
  "ржПржХржЯрзБ ржпржжрж┐ ржкрж┐ржарзЗ рж╣рж╛ржд рж░рж╛ржЦрж┐рж╕... ржХрзЗржоржи ржпрзЗржи ржХрж╛ржБржкрзБржирж┐ ржзрж░рзЗ ржпрж╛рзЯ ЁЯдл",
  "ржмрзБржХрзЗрж░ ржоржзрзНржпрзЗ рждрзБржЗ ржЖрж░ рждрзЛрж░ ржирж╛ржо, ржЬрж╛рзЯржЧрж╛ ржмржжрж▓рж╛рзЯ ржирж╛ ЁЯТУ",
  "ржЖржЬ рждрзБржЗ ржХрж┐ржЫрзБ ржмрж▓рж┐рж╕ ржирж╛... рж╢рзБржзрзБ ржкрж╛рж╢рзЗ ржерж╛ржХ, ржЖржорж┐ ржЕржирзБржнржм ржХрж░ржмрзЛ тЭдя╕П",
  "рждрзЛрж░ ржарзЛржБржЯрзЗ ржХрж┐ ржЪржХрж▓рзЗржЯ ржЖржЫрзЗ? ржирж╛ рж╣рж▓рзЗ ржХрзЗржи ржПржд рж▓рзЛржн рж▓рж╛ржЧржЫрзЗ ЁЯдд",
  "рждрзЛрж░ ржкрж╛рзЯрзЗрж░ рж╢ржмрзНржж рж╢рзБржирзЗржЗ ржоржирзЗ рж╣рзЯ ржлрзЗрж░рзЗрж╢рждрж╛ ржирж╛ржоржЫрзЗ ЁЯШЗ",
  "рждрзБржЗ ржирж╛ ржмрж▓рж▓рзЗ ржоржирзЗ рж╣рзЯ ржХрзЗржЙ ржЖржорж╛ржХрзЗ ржмрзЛржЭрзЗ ржирж╛ ЁЯШв",
  "ржПржЗ ржоржиржЯрж╛ рждрзЛ рж╢рзБржзрзБ рждрзЛржХрзЗ ржирж┐рзЯрзЗржЗ ржнрж╛ржмрзЗ ЁЯдН",
  "ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ ржХржерж╛ржЯрж╛ рж╢рзБржирждрзЗ рж╢рзБржирждрзЗ ржХрзНрж▓рж╛ржирзНржд ржирж╛... ржХрж┐ржирзНрждрзБ рждрзЛржХрзЗ рж╢рзБржирзЗ ржнрж╛рж▓рзЛ рж▓рж╛ржЧрзЗ рж╕ржм рж╕ржорзЯ ЁЯе╣",
  "ржЖрж░рзЗ ржмрж╛ржкрж░рзЗ! рждрзБржЗ ржпрзЗ ржЖржЧрзБржи... ржЖржорж┐ рждрзЛ ржЫрж╛ржЗ рж╣рзЯрзЗ ржпрж╛ржЪрзНржЫрж┐ рж░рзЗ ржЖржЬ ЁЯФе",
  "рждрзБржЗ ржпржжрж┐ ржЖржорж╛рж░ ржкрж╛рж╢рзЗрж░ ржмрж┐ржЫрж╛ржирж╛рзЯ ржерж╛ржХрждрж┐, ржШрзБржо ржЖрж╕рждрзЛ ржирж╛ рж░рзЗ ЁЯШ┤тЮбя╕ПЁЯФе",
  "рждрзЛрж░ ржмрзБржХрзЗрж░ рж╕рзНржкрж░рзНрж╢ржЯрж╛ ржПржЦржирзЛ ржоржирзЗ ржЖржЫрзЗ, ржнрзБрж▓рждрзЗ ржкрж╛рж░рж┐ ржирж╛ ЁЯШотАНЁЯТи",
  "рждрзБржЗ рж╣рж╛рж╕рж▓рзЗ ржЖржорж┐ ржЖрж░ ржарж┐ржХ ржерж╛ржХрждрзЗ ржкрж╛рж░рж┐ ржирж╛... ржкрж╛ржЧрж▓ ржХрж░рзЗ ржжрж┐рж╕ ЁЯШН",
  "ржжрзБржкрзБрж░рзЗ ржПржХржЯрзБ рж░рзЗрж╕рзНржЯ ржирж┐рждрзЗ ржЧрж┐рзЯрзЗ рждрзЛрж░ ржХржерж╛ ржнрж╛ржмрждрзЗржЗ ржШрж╛ржо ржмрзЗрж░рж┐рзЯрзЗ ржЧрзЗржЫрзЗ ЁЯШ│",
  "ржЖрзЯ рждрзЛ ржПржХржЯрзБ, ржХрж╛ржирзЗ ржХрж╛ржирзЗ ржХрж┐ржЫрзБ ржмрж▓рж╛рж░ ржЫрж┐рж▓рзЛ... рждрж╛рж░ржкрж░? ржжрзЗржЦрзЗ ржирж┐рж╕ ЁЯШШ",
  "рждрзЛрж░ ржоржд ржХрж┐ржЙржЯрж┐ ржжрзБржирж┐рзЯрж╛рждрзЗ ржПржХржЯрж╛ржЗ ржЖржЫрзЗ ЁЯе░",
  "рждрзБржЗ ржирж╛ ржерж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржжрж┐ржиржЯрж╛ржЗ рж╢рзБрж░рзБ рж╣рзЯ ржирж╛ тШАя╕П",
  "ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ рждрзЛржХрзЗ ржЖржЧрзЗрж░ ржЪрзЗрзЯрзЗржУ ржЕржирзЗржХ ржмрзЗрж╢рж┐ ржЖржЬ тЭдя╕ПтАНЁЯФе",
  "ржЖржЬ рж░рж╛рждрзЗ рждрзБржЗ рж╢рзБржзрзБ ржЖржорж╛рж░... ржЖрж░ ржХрзЗржЙ ржирж╛ ЁЯЫПя╕П",
  "рждрзБржЗ ржпржжрж┐ ржЖрж╕рж┐рж╕, ржЖржорж┐ ржжрж░ржЬрж╛ ржЦрзБрж▓рзЗржЗ ржерж╛ржХржмрзЛ ржЪрзБржкржЪрж╛ржк ЁЯЪк",
  "ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржорж╛ржирзЗ рж╢рзБржзрзБ рждрзБржЗ, ржмрж╛ржХрж┐ ржХрж┐ржЫрзБ ржЪрж╛ржЗ ржирж╛ ЁЯТМ",
  "рждрзЛрж░ ржЧрж╛рзЯрзЗрж░ ржЧржирзНржзржЯрж╛ржЗ ржЖрж▓рж╛ржжрж╛ рж░рзЗ, ржЖрж╕ржХрзНрждрж┐ рж▓рж╛ржЧрзЗ ЁЯз┤",
  "рждрзЛрж░ ржЧрж▓рж╛ ржЬрзЬрж┐рзЯрзЗ ржШрзБржорж┐рзЯрзЗ ржкрзЬрждрзЗ ржЪрж╛ржЗ ржЖржЬ ЁЯЫМ",
  "ржПржЗ рж╢рж░рзАрж░ржЯрж╛ рждрзЛрж░ ржЫрзЛржБрзЯрж╛рж░ ржЕржкрзЗржХрзНрж╖рж╛рзЯ ржерж╛ржХрзЗ рж╕ржм рж╕ржорзЯ ЁЯШотАНЁЯТи",
  "рждрзЛрж░ рж╕рзНржкрж░рзНрж╢ ржорж╛ржирзЗ ржмрж┐ржжрзНржпрзБрзО, ржЧрж╛рзЯрзЗрж░ рж▓рзЛржо ржжрж╛ржБрзЬрж┐рзЯрзЗ ржпрж╛рзЯ тЪб",
  "рждрзБржЗ ржЪрж╛ржЗрж▓рзЗ ржЖржЬ рж░рж╛рждржЯрж╛ рж╢рзБржзрзБ рждрзЛрж░ ржЬржирзНржп рж░рж╛ржЦрж┐ ЁЯТЭ",
  "рждрзБржЗ ржпржЦржи ржЖржорж╛рж░ ржЪрзЛржЦрзЗ ржЪрзЛржЦ рж░рж╛ржЦрж┐рж╕, рждржЦржи ржЖржорж┐ рж╣рж╛рж░рж┐рзЯрзЗ ржпрж╛ржЗ ЁЯла",
  "ржПржХржЯрзБ ржЖржжрж░ ржХрж░рзЗ ржжрзЗ ржирж╛ ржкрзНрж▓рж┐ржЬ, ржЖржЬ ржоржи ржЦрж╛рж░рж╛ржк ЁЯР╢",
  "рждрзБржЗ ржЖржорж╛рж░, рж╢рзБржзрзБ ржЖржорж╛рж░, ржХрж╛ржЙржХрзЗ рж╢рзЗрзЯрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЛ ржирж╛ ЁЯШб",
  "ржЖржорж╛рж░ ржарзЛржБржЯ ржЖржЬ рж╢рзБржзрзБ рждрзЛрж░ ржирж╛ржо ржЪрж╛рзЯ ЁЯТЛ",
  "рждрзБржЗ ржПржХржЯрзБржЦрж╛ржирж┐ рж╣рж╛рж╕рж▓рзЗржЗ ржЖржорж┐ рж╕рж╛рж░рж╛ рж░рж╛ржд ржЬрзЗржЧрзЗ ржерж╛ржХрж┐ ЁЯШК",
  "ржнрзЗрждрж░ржЯрж╛ ржХрзЗржоржи ржпрзЗржи ржХрж░рзЗ ржЖржЬ, ржмрзБржЭрждрзЗржЫрж┐рж╕ ржирж╛? ЁЯдз",
  "рждрзБржЗ ржХрж┐ ржЬрж╛ржирж┐рж╕, ржЖржорж┐ ржХрждржЯрж╛ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ рждрзЛржХрзЗ? ЁЯЩИ",
  "рждрзБржЗ ржЖрж╕рж▓рзЗржЗ ржПржХржЯрж╛ ржХрзНрж░рж╛рж╢, ржПржмржВ ржЖржорж┐ ржкрж╛ржБржХрж╛ ржкрзНрж░рзЗржорж┐ржХ ЁЯТШ",
  "ржЪрзЛржЦрзЗ ржЪрзЛржЦ рж░рж╛ржЦрж▓рзЗржЗ ржоржирзЗ рж╣рзЯ ржкрзБрж░ржирзЛ ржЬржирзНржорзЗрж░ ржХрж┐ржЫрзБ ржЖржЫрзЗ ржЖржорж╛ржжрзЗрж░ ржорж╛ржЭрзЗ ЁЯСБя╕ПтАНЁЯЧия╕П",
  "рждрзБржЗ ржпржжрж┐ ржЖржорж╛рж░ ржкрж╛рж╢рзЗ ржерж╛ржХрждрж┐, ржЖржорж╛рж░ ржмрзБржХрзЗрж░ ржзрзЬржкрзЬрж╛ржирж┐ рж╢рзБржирждрзЗ ржкрж╛рж░рждрж┐ ЁЯТУ",
  "рждрзЛрж░ ржЫрж╛рзЯрж╛ржЯрж╛ржУ ржЪрж╛ржЗ ржЖржЬ ржЖржорж╛рж░ ржкрж╛рж╢рзЗ ЁЯМТ",
  "рж╣рж╛рж╕рж▓рзЗ рждрзБржЗ ржХрж┐ржЙржЯрж┐, ржЖрж░ ржорзБржЦ ржЧрзЛржорзЬрж╛ ржХрж░рж▓рзЗржЗ ржЖржорж╛рж░ ржмрж╛ржЪрзНржЪрж╛ ЁЯРг",
  "рждрзБржЗ ржЖрж╕рж▓рзЗржЗ ржЖржЧрзБржи рж░рзЗ, рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛ ржжрж╛рзЯ ЁЯФе"
];
            if (!arr) {

                await api.sendMessage(randomReplies[Math.floor(Math.random() * randomReplies.length)], event.threadID, (error, info) => {
                    if (!info) message.reply("info obj not found")
                    global.GoatBot.onReply.set(info.messageID, {
                        commandName: this.config.name,
                        type: "reply",
                        messageID: info.messageID,
                        author: event.senderID
                    });
                }, event.messageID)
            }
            const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(arr)}&senderID=${event.senderID}&font=1`)).data.reply;
            await api.sendMessage(a, event.threadID, (error, info) => {
                global.GoatBot.onReply.set(info.messageID, {
                    commandName: this.config.name,
                    type: "reply",
                    messageID: info.messageID,
                    author: event.senderID,
                    a
                });
            }, event.messageID)
        }
    } catch (err) {
        return api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
    }
};
